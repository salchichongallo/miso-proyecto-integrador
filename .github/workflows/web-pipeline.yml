name: Web CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
      - '.github/workflows/web-pipeline.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: ./frontend/.nvmrc

      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit

      - name: Unit Tests
        run: npm run test -- web --ci --bail --run-in-band --coverage --color

      - name: Build
        run: npm run build:web

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: frontend/www/web

  deploy-dev:
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v5
        with:
          name: web-build
          path: frontend/www/web

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ vars.AWS_ROLE_SESSION_NAME }}

      - name: Sync to S3 (dev)
        run: aws s3 sync frontend/www/web/ s3://${{ secrets.S3_WEB_BUCKET }} --delete

      - name: Invalidate CloudFront (dev)
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
