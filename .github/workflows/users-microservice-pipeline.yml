name: Users Microservice Pipeline

env:
  ECR_REPOSITORY: medisupply/usuarios

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'backend/user_microservice/**'
      - '.github/workflows/back-users.yml'
  push:
    branches:
      - main
      - develop
      - feature/backend-deploy
    paths:
      - 'backend/user_microservice/**'
      - '.github/workflows/back-users.yml'

jobs:
  upload-to-ecr:
    runs-on: ubuntu-latest
    environment: dev

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      # TODO: remove this step after debugging
      - name: Where I am?
        run: |
          pwd
          ls -la

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ vars.AWS_ROLE_SESSION_NAME }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=raw,value=latest
            type=sha,prefix=sha-,format=short
            type=ref,event=tag

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push Docker image to Amazon ECR
        uses: docker/build-push-action@v6
        with:
          context: backend/user_microservice
          file: Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:buildcache
          cache-to: type=registry,ref=${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:buildcache,mode=max
